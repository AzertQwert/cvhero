name: test_release
on:
  workflow_run:
    workflows: [check_branch]
    types:
      - completed
    
  workflow_dispatch:

env:
  NEWV: ""
  OLDV: ""
    
jobs:
  test_new_release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - run: git branch -vv
      
      - name: get_new_version
        run: | 
          echo "NEWV=$(grep "~" docs/change_log.rst -m1 -a1 | sed 1q | cut -d" " -f1)" >> $GITHUB_ENV
          
      - name: get_current_version
        run: | 
          echo "OLDV=$(grep "VERSION" -m1 setup.py | cut -d"=" -f2 | sed "s/['\" ]//g")" >> $GITHUB_ENV
          
      - name: verify
        if: ${{ env.NEWV == env.OLDV }}
        run: echo you did not update the change_log && exit 1
      
      - name: set version
        run: |  
            sed -i "s/$OLDV/$NEWV/" setup.py
            sed -i "s/$OLDV/$NEWV/" pyproject.toml
    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build source distribution and wheel files
        run: python -m build
      
      - name: Upload files to TestPyPI
        run: python -m twine upload --verbose --repository testpypi dist/* -u__token__ -p${{ secrets.TEST_PYPI_TOKEN }}

      - name: Install from test and run tests
        run: |
          echo "Will wait 10s" && sleep 10s
          pip install --no-cache-dir --index-url https://test.pypi.org/simple cvhero --no-deps
          pip install -r requirements.txt
          pytest cv_tests
          pip uninstall -y cvhero
