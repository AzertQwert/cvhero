name: test_release
on:
  pull_request:
    branches: [main]
    
  workflow_dispatch:

env:
  NEWV: ""
  OLDV: ""
    
jobs:
  get_version_number:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - run: git branch -vv
      
      - name: get_new_version
        run: | 
          echo "NEWV=$(grep "~" docs/change_log.rst -m1 -a1 | sed 1q | cut -d" " -f1)" >> $GITHUB_ENV
          
      - name: get_current_version
        run: | 
          echo "OLDV=$(grep "VERSION" -m1 setup.py | cut -d"=" -f2 | sed "s/['\" ]//g")" >> $GITHUB_ENV
          
      - name: verify
        if: ${{ env.NEWV == env.OLDV }}
        run: echo you did not update the change_log && exit 1
      
      - name: set version
        run: |  
            sed -i "s/$OLDV/$NEWV/" setup.py
            sed -i "s/$OLDV/$NEWV/" pyproject.toml
      
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: setup.py pyproject.toml
          commit_message: Updated version numbers in setup.py and pyproject.toml
          
        
        
  testpypi:
    needs: get_version_number
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - run: | 
          echo ${{ env.NEWV }}
          echo $OLDV
          git branch -vv
      
      - run: | 
          cat setup.py
          cat pyproject.toml
      
      
      
