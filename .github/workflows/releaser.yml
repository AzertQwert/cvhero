name: releaser
on:
  push:
    branches: [main]
              
jobs:
  #initialize:
  #  runs-on: ubuntu-latest
  #  
  #  steps:
  #    - run: echo "0" > OLDCOVER.txt
  #    - uses: actions/upload-artifact@v3
  #      with:
  #        name: latest_coverage
  #        path: OLDCOVER.txt
  #    - run: exit 1
    
  run_tests:
    #needs: initialize
    uses: ./.github/workflows/test_runner.yml
  
  make_release:
    needs: run_tests
    runs-on: ubuntu-latest   
    
    env:
      NEWV: ''
      OLDV: ''
      HEADER: | 
        Change Log
        ==========

        Updates
        -------
    
    steps:
      - uses: actions/checkout@v3
      - name: get new_version 
        id: new_version
        uses: KJ002/read-yaml@1.6      
        with:
          file: .github/config_new_release.yml         
          key-path: '["new_version"]'
      
      - name: get_new_current_version
        run: | 
          echo "NEWV=${{ steps.new_version.outputs.data }}" >> $GITHUB_ENV
          echo "OLDV=$(grep "VERSION" -m1 setup.py | cut -d"=" -f2 | sed "s/['\" ]//g")" >> $GITHUB_ENV
          
      - name: verify
        if: ${{ env.NEWV <= env.OLDV }}
        run: echo you did not increment the version number && exit 1
      
      - name: set up new version
        run: |  
            sed -i "s/$OLDV/$NEWV/" setup.py
            sed -i "s/$OLDV/$NEWV/" pyproject.toml
            sed -i "s/$HEADER//" docs/change_log.rst
                        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%m-%d-%Y')"
      
      - name: Get changes
        id: changes
        uses: KJ002/read-yaml@1.6      
        with:
          file: .github/config_new_release.yml         
          key-path: '["change_log"]'
        
        
        
      - name: create change log
        run: | 
          echo $NEWV (${{ steps.date.outputs.date }})\n~~~~~~~~~~~~~~\n
          
          
        
            
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build Package
        run: python -m build
          
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN  }}
        
      - name: Install and run tests
        run: |
          echo "Will wait 30s" && sleep 30s
          pip install cvhero
          pip install -r requirements.txt
          pytest cv_tests
          pip uninstall -y cvhero
          
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: setup.py pyproject.toml
          commit_message: '[GH-Actions] updated verrsion numbers in setup.py and pyproject.toml'
          
      - name: Create Release  
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.NEWV }}
          tag_name: v${{ env.NEWV }}
    
    


  
