name: releaser
on:
  push:
    branches: [main]

env:
  NEWV: ''
  OLDV: ''

jobs:    
  run_tests:
    uses: ./.github/workflows/test_runner.yml
  
  make_new_release:
    needs: run_tests
    runs-on: ubuntu-latest    
   
    steps:
      - uses: actions/checkout@v3
      - name: get new_version 
        id: new_version
        uses: KJ002/read-yaml@1.6      
        with:
          file: .github/config_new_release.yml         
          key-path: '["new_version"]'
      
      - name: get_new_current_version
        run: | 
          echo "NEWV=${{ steps.new_version.outputs.data }}" >> $GITHUB_ENV
          echo "OLDV=$(grep "VERSION" -m1 setup.py | cut -d"=" -f2 | sed "s/['\" ]//g")" >> $GITHUB_ENV
          
      - name: verify ${{env.NEWV}} > ${{env.OLDV}}
        if: ${{ env.NEWV <= env.OLDV }}
        run: echo you did not increment the version number && exit 1
            
      - name: get changes
        id: changes
        uses: KJ002/read-yaml@1.6      
        with:
          file: .github/config_new_release.yml         
          key-path: '["change_log"]'        
      
      - name: get body
        id: body
        uses: KJ002/read-yaml@1.6      
        with:
          file: .github/config_new_release.yml         
          key-path: '["release_body"]'     
           
      - name: update change log
        run: |
          sed 5q docs/change_log.rst > docs/new_log.rst
          echo "$NEWV ($(date +%m/%d/%Y))" >> docs/new_log.rst
          echo '~~~~~~~~~~~~~~' >> docs/new_log.rst
          echo "${{ steps.changes.outputs.data }}" >> docs/new_log.rst
          
          sed -n 6,$(wc -l docs/change_log.rst | cut -d' ' -f1)p docs/change_log.rst >> docs/new_log.rst
          mv docs/new_log.rst docs/change_log.rst

      - name: set up new version
        run: |  
            sed -i "s/$OLDV/$NEWV/" setup.py
            sed -i "s/$OLDV/$NEWV/" pyproject.toml

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build Package
        run: python -m build
          
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN  }}
        
      - name: Install and run tests
        run: |
          echo "Will wait 120s" && sleep 120s
          pip install cvhero
          pip install -r requirements.txt
          python -c 'import cvhero;print(cvhero.__version__)'
          pytest cv_tests
          pip uninstall -y cvhero
          
      - name: prepare usage.rst
        run: |
            pip install jupyter
            cd docs 
            jupyter nbconvert --to rst --output-dir . --output usage.rst ../examples/usage.ipynb
            cd ..
          
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: setup.py pyproject.toml docs/change_log.rst docs/usage.rst
          commit_message: '[GH-Actions] updated configuration and documentation files for new release.'
          
      - name: Create Release  
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.NEWV }}
          tag_name: v${{ env.NEWV }}
          body: | 
            Changes:
            ${{ steps.changes.outputs.data }}
            
            ${{ steps.body.outputs.data }}
            
    
    


  
