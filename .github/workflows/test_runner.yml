name: test_runner
on: 
  pull_request: 
    branches: [main, dev]
  workflow_dispatch:
  
env:
    OLDCOVER: '0'
  
jobs:
  get_latest_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: get latest coverage
        uses: actions/download-artifact@v3
        with:
          name: latest_coverage
      
      - name: set min coverage env
        run: | 
          echo "OLDCOVER=$(cat OLDCOVER.txt)" >> $GITHUB_ENV
        
      - if: ${{ env.OLDCOVER >= '99' }}
        run: echo "OLDCOVER=99" >> $GITHUB_ENV
    

  run_tests:
    needs: get_latest_coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:       
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: run tests
        run: | 
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
          pytest --cov=cvhero --cov-fail-under=$OLDCOVER cv_tests > coverage.txt
        
      - name: Coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: coverage.txt
