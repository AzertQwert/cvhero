name: test_runner
on: 
  pull_request: 
    branches: [main, dev]
  workflow_dispatch:

env:
  OLDCOVER: '0'

    
jobs:
  get_latest_coverage:
    runs-on: ubuntu-latest
    steps:
      # gets the coverage of the latest release, as it was saved by releaser.yml
      - name: get latest coverage 
        uses: dawidd6/action-download-artifact@v2
        with:
          name: latest_coverage
          workflow: releaser.yml
      
      - name: set min coverage env
        run: | 
          echo "OLDCOVER=$(cat OLDCOVER.txt)" >> $GITHUB_ENV
          cat OLDCOVER.txt
          
      - if: ${{ env.OLDCOVER >= '99' }}
        run: echo 99 > OLDCOVER.txt
      
      - uses: actions/upload-artifact@v3
        with:
          name: min_coverage
          path: OLDCOVER.txt
    

  run_tests:
    needs: get_latest_coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']
        
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: get min coverage
        uses: actions/download-artifact@v3
        with:
          name: min_coverage
      
      - name: set min coverage
        run: |
          echo "OLDCOVER=$(cat OLDCOVER.txt)" >> $GITHUB_ENV
          cat OLDCOVER.txt    
      
      - name: install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install pytest coveralls
          pip install -r requirements.txt
          
      - name: run tests
        run: |
          echo testing with min coverage: $OLDCOVER
          # pytest --cov=cvhero --cov-fail-under=$OLDCOVER cv_tests > coverage.txt
          coverage run --source=cvhero -m pytest cv_tests
          coverage lcov -o coverage.lcov
      
      - name: coveralls parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: test_${{matrix.os}}_${{matrix.python-version}}
          parallel: true
  
  finalize_tests:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: coveralls finalize
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{secrets.github_token}}
          parallel-finished: true
          path-to-lcov: coverage.lcov
      
